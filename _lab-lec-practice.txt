assign g = (x ^ (y ^ z));
assign f = ((~k & z) | (k & x));

---------------------------------------

module top(
 input m, a, b, c, d,
 output s1, s0;
);

	wire a,b;
	assign a = ((~m & a)|(m & c));
	assign b = ((~m & b)|(m & d));
	addMod getSum(a,b,s1,s0);

endmodule

module addMod(input a, b, output s1, s0);
	s1 = a & b;
	s0 = a ^ b;
endmodule


---------------------------------------------------------

module ALU(
	input  [3:0]A,B,
	input  [2:0]ALUSel,
	output [3:0]OUT
);
	
	wire [3:0]clr, subAB, addAB, xorAB, orAB, andAB, preset;
	assign [3:0]clr = 4'b0000;
	adder4x(A, B, addAB);
	suber4x(A, B, subAB);
	doxor4x(A, B, xorAB);
	do_or4x(A, B,  orAB);
	doand4x(A, B, amdAB);
	doprs4x(A, B. preset);

endmodule












